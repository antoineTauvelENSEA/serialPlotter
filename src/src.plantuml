@startuml

title __Serial Plotter UML Diagram__\n

  namespace SerialPlotter {
    class ConnexionStatus {
        - timeStamp : long
        - timeout : long
        + paint()
        + run()
        + startRunning()
        + stopRunning()
    }
  }
  

  namespace SerialPlotter {
    class DataVisualizer {
        - circularBuffer : ArrayList<Sample>
        - division : int
        - isTriggered : boolean
        - yAxis : int
        + DataVisualizer()
        + setTriggered()
        + setyAxis()
        # paintComponent()
        - xToPixel()
        - yToPixel()
    }
  }
  

  namespace SerialPlotter {
    class GUI_CommPortConfig {
        ~ baudRateChooser : JComboBox
        - comPortChooser : JComboBox
        {static} - instance : GUI_CommPortConfig
        - portList : ArrayList<String>
        - possibleBaudRate : String[]
        - serialPorts : SerialPort[]
        + getBaudRate()
        + getCurrentComPort()
        {static} + getInstance()
        - GUI_CommPortConfig()
        - enumerate()
    }
  }
  

  namespace SerialPlotter {
    class GUI_GlobalConfig {
        - hasTimeStamp : boolean
        {static} - instance : GUI_GlobalConfig
        {static} + getInstance()
        {static} + main()
        - GUI_GlobalConfig()
    }
  }
  

  namespace SerialPlotter {
    class GUI_MainWindow {
        - currentComPort : SerialPort
        - dataButton : JButton
        - isRunning : boolean
        - isTriggered : JCheckBox
        - isTriggeredLable : JLabel
        - runButton : JButton
        - xAxisLabel : JLabel
        - xAxisSlider : JSlider
        - yAxisLabel : JLabel
        - yAxisSlider : JSlider
        + GUI_MainWindow()
        {static} + main()
    }
  }
  

  namespace SerialPlotter {
    class Main {
        {static} + main()
    }
  }
  

  namespace SerialPlotter {
    class PacketListener {
        - bufferSize : int
        - circularBuffer : ArrayList<Sample>
        + PacketListener()
        + delimiterIndicatesEndOfMessage()
        + getCircularBuffer()
        + getListeningEvents()
        + getMessageDelimiter()
        + serialEvent()
        + setBufferSize()
    }
  }
  

  namespace SerialPlotter {
    class RawDataDisplay {
        ~ i : int
        - circularBuffer : ArrayList<Sample>
        - jTextArea : JTextArea
        + RawDataDisplay()
        + run()
        + toggleVisibility()
    }
  }
  

  namespace SerialPlotter {
    class Sample {
        ~ timeStamp : int
        ~ valueA : double
        ~ valueB : double
        + Sample()
        + Sample()
        + Sample()
        + toString()
    }
  }
  

  namespace SerialPlotter {
    enum Status {
      Halt
      No_Data
      Running
    }
  }
  

  SerialPlotter.ConnexionStatus .up.|> java.lang.Runnable
  SerialPlotter.ConnexionStatus -up-|> javax.swing.JComponent
  SerialPlotter.ConnexionStatus o-- SerialPlotter.Status : status
  SerialPlotter.DataVisualizer -up-|> javax.swing.JComponent
  SerialPlotter.GUI_CommPortConfig -up-|> javax.swing.JPanel
  SerialPlotter.GUI_GlobalConfig -up-|> javax.swing.JFrame
  SerialPlotter.GUI_MainWindow -up-|> javax.swing.JFrame
  SerialPlotter.GUI_MainWindow o-- SerialPlotter.GUI_CommPortConfig : commPortConfig
  SerialPlotter.GUI_MainWindow o-- SerialPlotter.ConnexionStatus : connexionStatus
  SerialPlotter.GUI_MainWindow o-- SerialPlotter.DataVisualizer : dataVisualizer
  SerialPlotter.GUI_MainWindow o-- SerialPlotter.PacketListener : packetListener
  SerialPlotter.GUI_MainWindow o-- SerialPlotter.RawDataDisplay : rawDataDisplay
  SerialPlotter.PacketListener .up.|> com.fazecast.jSerialComm.SerialPortMessageListener
  SerialPlotter.PacketListener o-- SerialPlotter.ConnexionStatus : connexionStatus
  SerialPlotter.RawDataDisplay .up.|> java.lang.Runnable
  SerialPlotter.RawDataDisplay -up-|> javax.swing.JFrame


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
